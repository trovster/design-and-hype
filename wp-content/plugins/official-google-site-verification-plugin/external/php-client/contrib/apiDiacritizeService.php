<?php
/**
 * This file is part of the Google Verification Wordpress Plugin.
 *
 * The Google Verification Wordpress Plugin is free software:
 * you can redistribute it and/or modify it under the terms of the
 * GNU General Public License as published by the Free Software Foundation,
 * either version 2 of the License, or (at your option) any later version.

 * The Google Site Verification Wordpress Plugin is distributed in the hope
 * that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with the Google Site Verification Wordpress Plugin.
 * If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * The Diacritize service implementation
 *
 * Generated by http://code.google.com/p/google-api-php-client/
 * Generated from: https://www.googleapis.com/discovery/v0.3/describe/diacritize/v1
 **/
class apiDiacritizeService {

  // Variables that the apiServiceResource implementation depends on
  private $serviceName = 'diacritize';
  private $version = 'v1';
  private $restBasePath = 'https://www.googleapis.com/language/diacritize/';
  private $rpcPath = 'https://www.googleapis.com/rpc';
  private $io;
  // apiServiceResource's that are used internally
  private $diacritize;

  /**
   * Constructs the internal service representations and does the auto-magic configuration required to drive them
   */
  public function __construct(apiClient $apiClient) {
    $apiClient->addService('diacritize', 'v1');
    $this->io = $apiClient->getIo();
    $this->diacritize = new apiServiceResource($this, $this->serviceName, 'diacritize', json_decode('{"resources":{"corpus":{"methods":{"get":{"restPath":"v1","rpcMethod":"language.diacritize.corpus.get","httpMethod":"GET","description":"Adds diacritical marks to the given message.","parameters":{"lang":{"restParameterType":"query","required":true,"description":"Language of the message","type":"string"},"last_letter":{"restParameterType":"query","required":true,"description":"Flag to indicate whether the last letter in a word should be diacritized or not","type":"boolean"},"message":{"restParameterType":"query","required":true,"description":"Message to be diacritized","type":"string"}},"parameterOrder":["lang","last_letter","message"],"response":{"$ref":"LanguageDiacritizeCorpusResource"}}}}}}', true));
  }

  /**
   * @return the $io
   */
  public function getIo() {
    return $this->io;
  }

  /**
   * @return the $version
   */
  public function getVersion() {
    return $this->version;
  }

  /**
   * @return the $restBasePath
   */
  public function getRestBasePath() {
    return $this->restBasePath;
  }

  /**
   * @return the $rpcPath
   */
  public function getRpcPath() {
    return $this->rpcPath;
  }
}


<?php
/**
 * This file is part of the Google Verification Wordpress Plugin.
 *
 * The Google Verification Wordpress Plugin is free software:
 * you can redistribute it and/or modify it under the terms of the
 * GNU General Public License as published by the Free Software Foundation,
 * either version 2 of the License, or (at your option) any later version.

 * The Google Site Verification Wordpress Plugin is distributed in the hope
 * that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.

 * You should have received a copy of the GNU General Public License
 * along with the Google Site Verification Wordpress Plugin.
 * If not, see <http://www.gnu.org/licenses/>.
 */

/**
 * The Prediction service implementation
 *
 * Generated by http://code.google.com/p/google-api-php-client/
 * Generated from: https://www.googleapis.com/discovery/v0.3/describe/prediction/v1.1
 **/
class apiPredictionService {

  // Variables that the apiServiceResource implementation depends on
  private $serviceName = 'prediction';
  private $version = 'v1.1';
  private $restBasePath = 'https://www.googleapis.com/prediction/v1.1/';
  private $rpcPath = 'https://www.googleapis.com/rpc';
  private $io;
  // apiServiceResource's that are used internally
  private $training;

  /**
   * Constructs the internal service representations and does the auto-magic configuration required to drive them
   */
  public function __construct(apiClient $apiClient) {
    $apiClient->addService('prediction', 'v1.1');
    $this->io = $apiClient->getIo();
    $this->training = new apiServiceResource($this, $this->serviceName, 'training', json_decode('{"methods":{"delete":{"restPath":"training\/{data}","rpcMethod":"prediction.training.delete","httpMethod":"DELETE","parameters":{"data":{"restParameterType":"path","required":true,"description":"mybucket%2Fmydata resource in Google Storage","type":"string"}},"parameterOrder":["data"]},"get":{"restPath":"training\/{data}","rpcMethod":"prediction.training.get","httpMethod":"GET","parameters":{"data":{"restParameterType":"path","required":true,"description":"mybucket%2Fmydata resource in Google Storage","type":"string"}},"parameterOrder":["data"],"response":{"$ref":"PredictionTrainingGet"}},"insert":{"restPath":"training","rpcMethod":"prediction.training.insert","httpMethod":"POST","parameters":{"data":{"restParameterType":"query","required":true,"description":"mybucket%2Fmydata resource in Google Storage","type":"string"}},"parameterOrder":["data"],"request":{"$ref":"PredictionTrainingInsert"},"response":{"$ref":"PredictionTrainingInsert"}}}}', true));
  }

  /**
   * Implementation of the prediction.training.delete method.
   *
   * @param $data   string mybucket%2Fmydata resource in Google Storage
   */
  public function deleteTraining($data) {
    return $this->training->__call('delete', array(array('data' => $data)));
  }

  /**
   * Implementation of the prediction.training.get method.
   *
   * @param $data   string mybucket%2Fmydata resource in Google Storage
   */
  public function getTraining($data) {
    return $this->training->__call('get', array(array('data' => $data)));
  }

  /**
   * Implementation of the prediction.training.insert method.
   *
   * @param $data   string mybucket%2Fmydata resource in Google Storage
   * @param $postBody 
   */
  public function insertTraining($data, $postBody) {
    return $this->training->__call('insert', array(array('data' => $data, 'postBody' => $postBody)));
  }

  /**
   * @return the $io
   */
  public function getIo() {
    return $this->io;
  }

  /**
   * @return the $version
   */
  public function getVersion() {
    return $this->version;
  }

  /**
   * @return the $restBasePath
   */
  public function getRestBasePath() {
    return $this->restBasePath;
  }

  /**
   * @return the $rpcPath
   */
  public function getRpcPath() {
    return $this->rpcPath;
  }
}

